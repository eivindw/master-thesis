TODO/idea list for master
========== ========== ==========
- Parallelization:
  * Build proper ScalaCL example
  * Build example using Swarm
  * ForkJoin vs futures
  * SIMD operations?
  * JCuda vs ScalaCL?
- Add new features to Scala
- Pruning:
  * Find features in use
  * Remove features from Scala
  * Only retain features in use!
- Search/read more theory on embedded DSLs
- Read on method/structure from INF5500
- More DSL examples using Actor API:
  * Mashup example (XML avinor, yr.no ++ combined)
  * Chess DSL (Moves f4-h2+, multithreaded "brain")
  * Charting DSL (based on JFreechart or similar?)
- JVM options (-XX:+UseConcMarkSweepGC -XX:+UseCompressedOops ++)
  * http://blog.juma.me.uk/2009/10/26/new-jvm-options-and-scala-iteration-performance/
- Create proper benchmark suite to test/compare performance:
  * 2DArray vs List[List]
  * for comprehensions vs while
  * JVM tuning
  * ScalaCL vs parallel vs single-thread vs Swarm(?)
- Composition - traits
  * Compare with other languages (Groovy, Python, Ruby, Java, C# ++)
  * Are there more powerful ways than traits?
  * Composition without specific order - "real" traits?
- Change example pictures to make sure they are not trademarked
+ Configure REPL with classpath and imports
  + Copy + modify 'scala' command
  + Specify SImage CP + Imports (scala -i Predef.scala -classpath simage.jar)
+ Tools to look at bytecode/java:
  + scalac -print Test.scala -- print corresponding java
  + scalap -classpath . Test -- output Scala declarations
  + javap -classpath . Test -- output Java declarations
  + jad -p Test.class -- decompile class to Java